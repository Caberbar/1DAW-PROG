package Interfaz;

import ProyectoJPA.JDListaMovimientos;
import ProyectoJPA.JDCrear;
import ProyectoJPA.JDGestionar;
import ProyectoJPA.ModeloTarjetaCredito;
import ProyectoJPA.Movimiento;
import ProyectoJPA.TarjetaCredito;
import ProyectoJPA.TarjetaCreditoJPAController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class JFListaTarjetas extends javax.swing.JFrame {

    private ModeloTarjetaCredito modelo;

    /**
     * Creates new form JFListaTarjetas
     */
    public JFListaTarjetas() {
        initComponents();

        TarjetaCreditoJPAController tarjetaDAO = new TarjetaCreditoJPAController();
        List<TarjetaCredito> tarjetas = tarjetaDAO.obtenerTodasTarjetas();

        modelo = new ModeloTarjetaCredito();
        modelo.agregarTarjetas(tarjetas);
        jTable1.setModel(modelo);
        modelo.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmHerramientas = new javax.swing.JMenu();
        jmiCrear = new javax.swing.JMenuItem();
        jmiGestionar = new javax.swing.JMenuItem();
        jmiEliminar = new javax.swing.JMenuItem();
        jmiPagar = new javax.swing.JMenuItem();
        jmiMovimientos = new javax.swing.JMenuItem();
        jmInfo = new javax.swing.JMenu();
        jmiAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("LISTA TARJETAS CREDITO");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jmHerramientas.setText("Herramientas");

        jmiCrear.setText("Crear tarjeta");
        jmiCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCrearActionPerformed(evt);
            }
        });
        jmHerramientas.add(jmiCrear);

        jmiGestionar.setText("Gestionar tarjeta");
        jmiGestionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGestionarActionPerformed(evt);
            }
        });
        jmHerramientas.add(jmiGestionar);

        jmiEliminar.setText("Eliminar tarjeta");
        jmiEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEliminarActionPerformed(evt);
            }
        });
        jmHerramientas.add(jmiEliminar);

        jmiPagar.setText("Realizar pago");
        jmiPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPagarActionPerformed(evt);
            }
        });
        jmHerramientas.add(jmiPagar);

        jmiMovimientos.setText("Consultar movimientos");
        jmiMovimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMovimientosActionPerformed(evt);
            }
        });
        jmHerramientas.add(jmiMovimientos);

        jMenuBar1.add(jmHerramientas);

        jmInfo.setText("Info");

        jmiAyuda.setText("Ayuda");
        jmiAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAyudaActionPerformed(evt);
            }
        });
        jmInfo.add(jmiAyuda);

        jMenuBar1.add(jmInfo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(jLabel1)
                .addContainerGap(380, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiGestionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGestionarActionPerformed
        int pos = 0;
        if (jTable1.getSelectedRow() >= -1 && jTable1.getSelectedColumn() >= -1) {
            pos = jTable1.getSelectedRow();
        }
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Marque una tarjeta de la lista.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            JDGestionar gestionar = new JDGestionar(this, true, modelo.getTarjeta(pos));
            gestionar.setVisible(true);
            modelo.fireTableDataChanged();
        }
    }//GEN-LAST:event_jmiGestionarActionPerformed

    private void jmiCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCrearActionPerformed
        JDCrear crear = new JDCrear(this, true);
        crear.setVisible(true);
        if (crear.valido()) {
            TarjetaCredito tarjeta = crear.getTarjetaCredito();
            if (TarjetaCreditoJPAController.crearTarjeta(tarjeta)) {
                modelo.añadirTarjetaModelo(tarjeta);
                JOptionPane.showMessageDialog(this, "La tarjeta se creó correctamente.", "CREADA", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "La tarjeta no se puedo crear.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jmiCrearActionPerformed

    private void jmiEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEliminarActionPerformed
        int pos = 0;
        if (jTable1.getSelectedRow() >= -1 && jTable1.getSelectedColumn() >= -1) {
            pos = jTable1.getSelectedRow();
        }
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Marque una tarjeta de la lista.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            int opcion = JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminar la tarjeta?", "AVISO", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (opcion == 0) {
                if (TarjetaCreditoJPAController.eliminarTarjeta(modelo.getTarjeta(pos).getNumero())) {
                    modelo.eliminarTarjetaModelo(pos);
                    JOptionPane.showMessageDialog(this, "La tarjeta se eliminó correctamente.", "ELIMINADA", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "La tarjeta no se puedo eliminar.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jmiEliminarActionPerformed

    private void jmiPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPagarActionPerformed
        int pos = 0;
        if (jTable1.getSelectedRow() >= -1 && jTable1.getSelectedColumn() >= -1) {
            pos = jTable1.getSelectedRow();
        }
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Marque una tarjeta de la lista.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            JDRealizarPago realizarpago = new JDRealizarPago(this, true, modelo.getTarjeta(pos));
            realizarpago.setVisible(true);
        }
    }//GEN-LAST:event_jmiPagarActionPerformed

    private void jmiAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAyudaActionPerformed
        JOptionPane.showMessageDialog(this, "Proyecto Gestión Tarjetas Crédito\nRealizado por: Carlos Bernal\nFecha: 05-2023.", "INFORMACIÓN", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiAyudaActionPerformed

    private void jmiMovimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMovimientosActionPerformed
        int pos = 0;
        if (jTable1.getSelectedRow() >= -1 && jTable1.getSelectedColumn() >= -1) {
            pos = jTable1.getSelectedRow();
        }
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Marque una tarjeta de la lista.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            ArrayList<Movimiento> movimientos = new ArrayList<>(modelo.getTarjeta(pos).getMovimientos());
            if (movimientos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La tarjeta no tiene movimientos.", "AVISO", JOptionPane.WARNING_MESSAGE);
            } else {
                JDListaMovimientos listamovimientos = new JDListaMovimientos(this, true, movimientos);
                listamovimientos.setVisible(true);
            }
        }
    }//GEN-LAST:event_jmiMovimientosActionPerformed

    public ArrayList<TarjetaCredito> listaTarjetas(List<TarjetaCredito> tarjetas) {
        ArrayList<TarjetaCredito> lista = null;
        for (TarjetaCredito tarjeta : tarjetas) {
            lista.add(tarjeta);
        }
        //this.listaTarjetas.addAll(tarjetas);
        return lista;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFListaTarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFListaTarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFListaTarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFListaTarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFListaTarjetas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu jmHerramientas;
    private javax.swing.JMenu jmInfo;
    private javax.swing.JMenuItem jmiAyuda;
    private javax.swing.JMenuItem jmiCrear;
    private javax.swing.JMenuItem jmiEliminar;
    private javax.swing.JMenuItem jmiGestionar;
    private javax.swing.JMenuItem jmiMovimientos;
    private javax.swing.JMenuItem jmiPagar;
    // End of variables declaration//GEN-END:variables
}
