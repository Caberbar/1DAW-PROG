/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import Aplicacion.TarjetaCredito;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author DAW-B
 */
public class TarjetasJTable extends javax.swing.JFrame {

    private ModeloListaTarjetas modelo;

    /**
     * Creates new form TarjetasJTable
     */
    public TarjetasJTable() {
        initComponents();
        this.modelo = new ModeloListaTarjetas();
        jTableTarjetasCredito.setModel(modelo);
        modelo.fireTableDataChanged();
    }

    public ModeloListaTarjetas getModelo() {
        return modelo;
    }

    public class ModeloListaTarjetas extends AbstractTableModel {

        private ArrayList<TarjetaCredito> listatarjetas;
        private final String[] nombresColumnas = {"Titular", "DNI/NIF", "Tarjeta", "Gasto"};

        public ModeloListaTarjetas() {
            this.listatarjetas = new ArrayList<>();
        }

        public void añadirTarjetas(TarjetaCredito t) {
            this.listatarjetas.add(t);
            fireTableDataChanged();
        }

        @Override
        public String getColumnName(int index) {
            return this.nombresColumnas[index];
        }

        @Override
        public int getRowCount() {
            return listatarjetas.size();
        }

        public ArrayList<TarjetaCredito> getListatarjetas() {
            return listatarjetas;
        }

        public void setListatarjetas(ArrayList<TarjetaCredito> listatarjetas) {
            this.listatarjetas = listatarjetas;
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            TarjetaCredito t = listatarjetas.get(rowIndex);
            Object value = null;
            switch (columnIndex) {
                case 0:
                    value = t.getNombre();
                    break;
                case 1:
                    value = t.getNif();
                    break;
                case 2:
                    value = t.getNumero();
                    break;
                case 3:
                    value = t.getLimite();
                    break;
            }
            return value;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpTarjetasCredito = new javax.swing.JScrollPane();
        jTableTarjetasCredito = new javax.swing.JTable();
        JLtitulo = new javax.swing.JLabel();
        jbCerrarLista = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableTarjetasCredito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Titular", "DNI/NIF", "Tarjeta", "Gasto"
            }
        ));
        jSpTarjetasCredito.setViewportView(jTableTarjetasCredito);

        JLtitulo.setText("Datos tarjeta de crédito");

        jbCerrarLista.setText("Cerrar");
        jbCerrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerrarListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addComponent(JLtitulo)
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpTarjetasCredito)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbCerrarLista)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(JLtitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSpTarjetasCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCerrarLista)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCerrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerrarListaActionPerformed
        dispose();
    }//GEN-LAST:event_jbCerrarListaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TarjetasJTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TarjetasJTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TarjetasJTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TarjetasJTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TarjetasJTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLtitulo;
    private javax.swing.JScrollPane jSpTarjetasCredito;
    private javax.swing.JTable jTableTarjetasCredito;
    private javax.swing.JButton jbCerrarLista;
    // End of variables declaration//GEN-END:variables


    public void AñadirTarjetita(TarjetaCredito t) {
        modelo.añadirTarjetas(t);
        System.out.println(modelo.getListatarjetas() + "añadir tarjetas");
    }

    
    private void jmiCargarActionPerformed(java.awt.event.ActionEvent evt) {                                          
//        if (listaTarjetas.size() <= 0) {
//            int opcion = JOptionPane.showConfirmDialog(null, "¿Desea cerrar la lista que tiene y cargar una nueva?", "AVISO", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
//            if (opcion == 0) {
//                JFileChooser jfc = new JFileChooser();
//                jfc.setAcceptAllFileFilterUsed(false);
//                FileNameExtensionFilter filtroExtension = new FileNameExtensionFilter("Solo archivos txt", "txt");
//                jfc.addChoosableFileFilter(filtroExtension);
//
//                opcion = jfc.showOpenDialog(this);
//
//                if (opcion == JFileChooser.APPROVE_OPTION) {
//                    File f = jfc.getSelectedFile();
//                    if (f.isFile() && f.exists()) {
//                        try {
//                            FileInputStream archivo = new FileInputStream(f);
//                            ObjectInputStream entrada = new ObjectInputStream(archivo);
//
//                            listaTarjetas = (ArrayList<TarjetaCredito>) entrada.readObject();
//                            jlContadorTarjetas.setText(String.valueOf(listaTarjetas.size()));
//
//                            entrada.close();
//                            archivo.close();
//                            herraVisibles();
//                            JOptionPane.showMessageDialog(this, "Las tarjetas se cargaron correctamente.", "INFORMACIÓN", JOptionPane.INFORMATION_MESSAGE);
//                        } catch (IOException e) {
//                            JOptionPane.showMessageDialog(this, "Error al leer el archivo.", "ERROR", JOptionPane.ERROR_MESSAGE);
//                        } catch (ClassNotFoundException e) {
//                            JOptionPane.showMessageDialog(this, "Error al deserializar el archivo.", "ERROR", JOptionPane.ERROR_MESSAGE);
//                        }
//                    }
//                }
//            }
//        }
//    }                                         
//
//    private void jmiGuardarActionPerformed(java.awt.event.ActionEvent evt) {                                           
//        FileOutputStream archivo = null;
//        try {
//            File ficheroSeleccionado;
//            JFileChooser guardar = new JFileChooser();
//            guardar.setAcceptAllFileFilterUsed(false);
//            FileNameExtensionFilter filtroExtension = new FileNameExtensionFilter("Solo archivos con extensión .txt", "txt");
//            guardar.addChoosableFileFilter(filtroExtension);
//            guardar.showSaveDialog(null);
//            guardar.setFileSelectionMode(JFileChooser.SAVE_DIALOG);
//            ficheroSeleccionado = guardar.getSelectedFile();
//            archivo = new FileOutputStream(ficheroSeleccionado);
//            ObjectOutputStream salida = null;
//            try {
//                salida = new ObjectOutputStream(archivo);
//            } catch (IOException ex) {
//                Logger.getLogger(JFMenu.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            try {
//                salida.writeObject(listaTarjetas);
//                salida.close();
//                archivo.close();
//            } catch (IOException ex) {
//                Logger.getLogger(JFMenu.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(JFMenu.class.getName()).log(Level.SEVERE, null, ex);
//        } finally {
//            try {
//                archivo.close();
//            } catch (IOException ex) {
//                Logger.getLogger(JFMenu.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }        
}
